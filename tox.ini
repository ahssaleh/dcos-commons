[tox]
envlist = py35-{cassandra,elastic,hdfs,helloworld,kafka}

[pytest]
addopts = -rs -vv --tb=long
commands =
  dcos config set core.dcos_url $CLUSTER_URL
  dcos config set core.ssl_verify false
  tools/./dcos_login.py
  py.test {posargs}

[testenv]
deps =
  teamcity-messages
  -rtest_requirements.txt

[testenv:py35-cassandra]
passenv =
  TEAMCITY_VERSION
  AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY
  AWS_REGION
  CASSANDRA_BACKUP_CLUSTER_NAME
  CASSANDRA_RESTORE_CLUSTER_NAME
  AWS_BUCKET_NAME
  BACKUP_NODE_ADDRESS
  BACKUP_NODE_PORT
  RESTORE_NODE_ADDRESS
  RESTORE_NODE_PORT
  AZURE_CLIENT_ID
  AZURE_CLIENT_SECRET
  AZURE_TENANT_ID
  AZURE_STORAGE_ACCOUNT
  AZURE_STORAGE_KEY
  AZURE_LOCATION
  CONTAINER_NAME
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/cassandra/tests

[testenv:py35-elastic]
passenv =
  TEAMCITY_VERSION
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/elastic/tests

[testenv:py35-hdfs]
passenv =
  TEAMCITY_VERSION
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/hdfs/tests

[testenv:py35-kafka]
passenv =
  TEAMCITY_VERSION
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/kafka/tests

[testenv:py35-helloworld]
passenv =
  TEAMCITY_VERSION
  FRAMEWORK_NAME
  NUM_HELLO
  NUM_WORLD
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/helloworld/tests

[testenv:py35-template]
passenv =
  TEAMCITY_VERSION
  CLUSTER_URL
  SECURITY
  STUB_UNIVERSE_URL
  DCOS_ENTERPRISE
  TEST_LOG_LEVEL
testpaths = frameworks/template/tests

[testenv:py35-dcos-launch]
# This is convenient entrypoint for using dcos-launch to cleanup tests
# without having to recreate a new virtual environment or download a binary
passenv =
  AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY
  AWS_REGION
  AZURE_CLIENT_ID
  AZURE_CLIENT_SECRET
  AZURE_SUBSCRIPTION_ID
  AZURE_TENANT_ID
  AZURE_LOCATION
  GOOGLE_APPLICATION_CREDENTIALS
  GCE_ZONE
commands =
  dcos-launch {posargs}
